@model PgnViewerWeb.ViewGameViewModel
@using System.Collections.Generic;
@{
    var currentMovePlayer = Model.Game.FirstPlayer;
    var currentMoveIndex = 1;
    string currentId = null;
    int prevGameId = Model.Index - 1 >= 0 ? Model.Index - 1 : 0;
    int nextGameId = Model.Index + 1 < Model.NumGames ? Model.Index + 1 : Model.Index;
}

@section inhead{
    @*<link rel="stylesheet" href="/examples/example.css">*@
    <link rel="stylesheet" href="/assets/base.css">
    <link rel="stylesheet" href="/assets/theme.css">
    <link rel="stylesheet" href="/assets/desktop.css">
    <link rel="stylesheet" href="/css/ViewGame.css">

    <style>
        
    </style>
}

<ul id="mainContent">
    <li>
        <div id="gameProperties">
            <span id="gameEvent">@Model.Game.Event</span>
            <span>@Model.Game.White </span>  vs. <span>@Model.Game.Black </span>
            (<span id="gameResult">@Model.Game.Result</span>)
        </div>
    </li>
    <li>
        <div class="chessground normal blue cburnett" id="ground7"></div>

        <div>
            <div id="gameControls">
                <span onclick="MoveTo(null, 0);">&lt;&lt;</span>
                <span onclick="MovePrevious();">&lt;</span>
                <span onclick="MoveNext()">&gt;</span>
                <span onclick="MoveTo(null, @Model.Game.Moves.Count()); ">&gt;&gt;</span>
            </div>
        </div>
    </li>

    <li>
        <div id="maingame" data-moves="@Model.MovesAsJson" data-fen="@Model.Game.Fen" data-pgn="@Model.Game.Pgn" data-firstplayer="@Model.Game.FirstPlayer">
            <div id="moveList" class="moveList" style="overflow-y:scroll">
                @for (var mindex = 0; mindex < Model.Game.Moves.Count(); mindex++)
                {
                    @if (mindex == 0 && string.Equals("black", Model.Game.FirstPlayer, StringComparison.OrdinalIgnoreCase))
                    {
                        WriteLiteral("\r\n<div class=\"moveItem\">\r\n");
                        <span class="moveId">1</span>
                        <span class="move">..</span>
                    }

                    @if (string.Equals("white", currentMovePlayer, StringComparison.OrdinalIgnoreCase))
                    {
                        WriteLiteral("\r\n<div class=\"moveItem\">\r\n");
                        <span class="moveId">@currentMoveIndex</span>
                        <span id="@string.Format("move{0}",@Model.Game.Moves[mindex].Id)" class="move" onclick="MoveTo(this, @Model.Game.Moves[mindex].Id)">@Model.Game.Moves[mindex].Move.ToString()</span>
                    }

                    @if (string.Equals("black", currentMovePlayer, StringComparison.OrdinalIgnoreCase))
                    {
                        <span id="@string.Format("move{0}",@Model.Game.Moves[mindex].Id)" class="move" onclick="MoveTo(this, @Model.Game.Moves[mindex].Id)">@Model.Game.Moves[mindex].Move.ToString()</span>
                        WriteLiteral(@"</div>");
                        currentMoveIndex++;
                    }

                    @* update currentMovePlayer *@
                    if (string.Equals("white", currentMovePlayer, StringComparison.OrdinalIgnoreCase))
                    {
                        currentMovePlayer = "black";
                    }
                    else
                    {
                        currentMovePlayer = "white";
                    }
                }
            </div>
        </div>
    </li>
</ul>

<div id="gameFooter">
    <a class="navLink" asp-controller="PgnViewer" asp-action="ViewGame" asp-route-filename="@Model.Filename" asp-route-index="@prevGameId">&lt; Previous game (@prevGameId)</a> |
    <a class="navLink" asp-controller="PgnViewer" asp-action="ViewGame" asp-route-filename="@Model.Filename" asp-route-index="@nextGameId">Next game (@nextGameId)&gt; </a>
    <br />
    <a class="navLink" asp-controller="PgnViewer" asp-action="ViewFile" asp-route-filename="@Model.Filename">Back to file</a>
</div>


@section scripts{
    <script src="/chessground.js"></script>
    <script src="/examples/chess.min.js"></script>
    <script src="/lib/enquire/dist/enquire.js"></script>
    <script src="/js/ViewGame.js"></script>
}
