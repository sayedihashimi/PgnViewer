@model PgnViewerWeb.ViewGameViewModel
@using System.Collections.Generic;

<table>
    <tr>
        <td>
            <script src="/chessground.js"></script>
            <!-- chess.js is NOT required by chessground. We include it for the examples. -->
            <script src="/examples/chess.min.js"></script>
            <script>
                function chessToDests(chess) {
                    var dests = {};
                    chess.SQUARES.forEach(function(s) {
                        var ms = chess.moves({square: s, verbose: true});
                        if (ms.length) dests[s] = ms.map(function(m) { return m.to; });
                    });
                    return dests;
                }

                function chessToColor(chess) {
                    return (chess.turn() == "w") ? "white" : "black";
                }
            </script>
            <section>
                <div class="chessground normal blue cburnett" id="ground7"></div>
                <p>Play a game on a single board</p>                
            </section>
        </td>

        <td>
            <article id="maingame" data-moves="@Model.MovesAsJson" data-fen="@Model.Game.Fen" data-pgn="@Model.Game.Pgn">
                <ul>
                    <li>White: @Model.Game.White</li>
                    <li>Black: @Model.Game.Black</li>
                </ul>
                <table>
                    <thead>
                    <td>Move</td>
                    <td>White</td>
                    <td>Black</td>
                    </thead>
                    @foreach (var move in Model.Game.Moves) {
                        <tr>
                            <td>@move.MoveNumber</td>
                            <td>@move.WhiteMove</td>
                            <td>@move.BlackMove</td>
                        </tr>
                    }
                </table>
            </article>
        </td>
    </tr>
</table>

<script>
(function() {
    var ground;
    var fen = document.getElementById('maingame').getAttribute('data-fen')
    if (!fen) { fen = null; }

    var chess = new Chess();
    if (fen != null && fen.length > 0) {
        chess = new Chess(fen);
    }

    var onMove = function(orig, dest) {
        chess.move({from: orig, to: dest});
        ground.set({
            turnColor: chessToColor(chess),
            movable: {
                color: chessToColor(chess),
                dests: chessToDests(chess)
            }
        });

        console.log(ground.getFen());
    };

    ground = Chessground(document.getElementById('ground7'), {
        viewOnly: false,
        fen: fen,
        turnColor: chessToColor(chess),
        animation: {
            duration: 500
        },
        movable: {
            free: false,
            color: chessToColor(chess),
            dests: chessToDests(chess),
            showDests: true,
            events: {
                after: onMove
            }
        },
        disableContextMenu: false,
        highlight: {
            lastMove: true
        },
        premovable: {
            enabled: false
        },
        drawable: {
            enabled: true         // enable SVG circle and arrow drawing on the board
        }
    });
        window.cg6 = ground;
})();
</script>

@section inhead{
    <!-- sayedha: inhead section -->
    <link rel="stylesheet" href="/examples/example.css">
    <link rel="stylesheet" href="/assets/base.css">
    <link rel="stylesheet" href="/assets/theme.css">
    <link rel="stylesheet" href="/assets/desktop.css">
}